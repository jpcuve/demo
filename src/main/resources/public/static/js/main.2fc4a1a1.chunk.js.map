{"version":3,"sources":["remote.tsx","api.tsx","component/SignOutButton.tsx","page/Outline.tsx","page/HomePage.tsx","page/TestPage.tsx","component/SignInForm.tsx","domain.tsx","store.ts","component/SocialSignInPanel.tsx","page/SignInPage.tsx","component/SignUpForm.tsx","page/SignUpPage.tsx","component/UpdatePasswordForm.tsx","page/UpdatePasswordPage.tsx","component/ResetPasswordForm.tsx","page/ResetPasswordPage.tsx","component/StatementTable.tsx","page/StatementPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BASE_URL","window","location","port","protocol","host","console","debug","client","rpc","endPoint","a","method","contentType","body","options","headers","token","localStorage","getItem","credentials","JSON","stringify","fetch","res","ok","Error","status","statusText","json","error","get","this","post","data","postForm","form","undefined","put","delete","getApi","dispatch","wrap","fn","type","errors","fetching","message","flash","setTimeout","signIn","email","password","socialSignIn","social","identity","signUp","name","signOut","updatePassword","newPassword","newPasswordConfirmation","resetPassword","perpetual","statement","instructions","log","SignOutButton","props","api","useDispatch","handleClick","gapi","auth2","getAuthInstance","onCompleted","onClick","Outline","useSelector","state","profile","account","bank","className","map","key","to","history","push","children","HomePage","TestPage","count","counter","defaultFormData","SignInForm","React","useState","formData","setFormData","handleChange","e","target","value","handleSubmit","preventDefault","noValidate","onSubmit","onChange","defaultPosition","defaultApplicationState","identified","roles","id","bankId","shortPositionLimit","opening","settlementCompletionTarget","closing","minimumPayIn","currencyGroups","currencies","store","createStore","action","then","subscribe","setItem","getState","SocialSignInPanel","onSignIn","googleUser","getBasicProfile","getId","getName","getImageUrl","getEmail","getAuthResponse","id_token","useEffect","signin2","render","SignInPage","signInCompleted","SignUpForm","SignUpPage","signUpCompleted","UpdatePasswordForm","UpdatePasswordPage","ResetPasswordForm","ResetPasswordPage","StatementTable","currency","colSpan","coin","instruction","bookId","booked","partyIds","rawAmount","amount","dbAmount","crAmount","crId","toFixed","reference","StatementPage","App","basename","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2fc4a1a1.chunk.js","sourcesContent":["const BASE_URL = window.location.port === '3000' ? 'http://localhost:8080' : `${window.location.protocol}//${window.location.host}`\nconsole.debug(`Base URL for RPC: ${BASE_URL}`)\n\nconst client: any = {\n  rpc: async function (endPoint: string, method: string = 'GET', contentType: string = '', body: any | null = null ): Promise<any> {\n    const options: any = {\n      method,\n      headers: {\n        'Accept': 'application/json',\n        // 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJKb2UiLCJyb2xlcyI6ImEsYixjIn0.E89yUJXwD41GWgYKIzC8Kb6AHCss2nUVcKVNqa1MsXI',\n      },\n      // credentials: 'include',\n    };\n    const token = localStorage.getItem('TOKEN') || ''\n    if (token){\n      options.headers['Authorization'] = `Bearer ${token}`\n      options.credentials = 'include'\n    }\n    if (body){\n      if (contentType){\n        options.headers['Content-Type'] = contentType\n      }\n      options.body = body;\n    }\n    console.debug(JSON.stringify(options))\n    const res = await fetch(`${BASE_URL}${endPoint}`, options)\n    if (!res.ok){\n      throw Error(`Http error: ${res.status} ${res.statusText}`)\n    }\n    const json = await res.json()\n    console.debug(JSON.stringify(json))\n    if ('error' in json) {\n      throw Error(json.error)\n    }\n    return json;\n  },\n  get: async function(endPoint: string): Promise<any> { \n    return await this.rpc(endPoint)\n  } ,\n  post: async function(endPoint: string, data: any): Promise<any> { \n    return await this.rpc(endPoint, 'POST', 'application/json', JSON.stringify(data))\n  },\n  postForm: async function(endPoint: string, form: FormData): Promise<any> { \n    return await this.rpc(endPoint, 'POST', undefined, form)\n  },  // contentType: undefined so boundary is correctly set\n  put: async function(endPoint: string, data: any): Promise<any> { \n    return await this.rpc(endPoint, 'PUT', 'application/json', JSON.stringify(data))\n  },\n  delete: async function(endPoint: string): Promise<any> { \n    return await this.rpc(endPoint, 'DELETE')\n  }\n}\n\nexport default client\n\n","import client from \"./remote\"\nimport { Dispatch } from \"react\"\nimport { AnyAction } from \"redux\"\nimport { Token, Perpetual, Instruction } from \"./domain\"\n\nconst AUTH_BASE = '/auth'\nconst MASTER_BASE = '/master'\n\nexport const getApi = (dispatch: Dispatch<AnyAction>) => {\n  const wrap: <T>(fn: () => Promise<T|undefined>) => Promise<T|undefined> = async (fn) => {\n    dispatch({ type: 'update-errors', errors: [] })\n    dispatch({ type: 'update-fetching', fetching: true })\n    try {\n      return await fn()\n    } catch (e) {\n      dispatch({ type: 'update-errors', errors: [e.message] })\n    } finally {\n      dispatch({ type: 'update-fetching', fetching: false })\n    }\n  }\n\n  return {\n    flash: (message: string) => {\n      dispatch({type: 'update-flash', flash: message })\n      setTimeout(() => {\n        dispatch({type: 'update-flash', flash: 'Ready'})\n      }, 3000)\n    },\n    signIn: async (email: string, password: string) => wrap<Token>(async () => {\n      const token: Token = await client.post(`${AUTH_BASE}/sign-in`, { email, password })\n      dispatch({ type: 'update-token', token: token.token })\n      return token\n    }),\n    socialSignIn: async (social: string, identity: string) => wrap<Token>(async () => {\n      const token: Token = await client.post(`${AUTH_BASE}/social-sign-in`, {social, identity})\n      dispatch({ type: 'update-token', token: token.token })\n      return token\n    }),\n    signUp: async (email: string, password: string, name: string) => wrap<void>(async () => {\n      await client.post(`${AUTH_BASE}/sign-up`, { email, password, name })\n    }),\n    signOut: async () => wrap<Token>(async () => {\n      const token: Token = await client.get(`${AUTH_BASE}/sign-out`)\n      dispatch({ type: 'update-token', token: token.token })\n      return token\n    }),\n    updatePassword: async (newPassword: string, newPasswordConfirmation: string) => wrap<void>(async () => {\n      await client.post(`${AUTH_BASE}/update-password`, { newPassword, newPasswordConfirmation })\n    }),\n    resetPassword: async (email: string) => wrap<void>(async () => {\n      await client.post(`${AUTH_BASE}/reset-password`, { email })\n    }),\n    perpetual: async () => wrap<Perpetual>(async () => {\n      const perpetual: Perpetual = await client.get(`${MASTER_BASE}/perpetual`)\n      dispatch({ type: 'update-perpetual', perpetual })\n      return perpetual\n    }),\n    statement: async () => wrap<Instruction[]>(async () => {\n      const instructions: Instruction[] = await client.get(`${MASTER_BASE}/statement`)\n      dispatch({ type: 'update-instructions', instructions})\n      return instructions\n    }),\n    error: async () => wrap<any>(async () => {\n      const data: any = await client.get(`${AUTH_BASE}/error`)\n      console.log(JSON.stringify(data))\n      return data\n    })\n  }\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getApi } from '../api'\nimport { FormProps } from '..'\ndeclare const gapi: any\n\nconst SignOutButton: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const handleClick = async () => {\n    api.signOut()\n    if (gapi.auth2){\n      const auth2 = gapi.auth2.getAuthInstance()\n      await auth2.signOut()\n    } \n    console.log('User signed out.')\n    props.onCompleted()\n  }\n  return (\n    <button onClick={handleClick}>Sign-out</button>\n  )\n}\n\nexport default SignOutButton","import React from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../store'\nimport { Perpetual } from '../domain'\nimport SignOutButton from '../component/SignOutButton'\n\nconst Outline: React.FC<RouteComponentProps> = props => {\n  const token = useSelector<ApplicationState, string>(state => state.token)\n  const errors = useSelector<ApplicationState, string[]>(state => state.errors)\n  const flash = useSelector<ApplicationState, string>(state => state.flash)\n  const fetching = useSelector<ApplicationState, boolean>(state => state.fetching)\n  const perpetual = useSelector<ApplicationState, Perpetual>(state => state.perpetual)\n  const signOutCompleted = () => {\n    props.history.push('/')\n  }\n  return (\n    <div>\n      {token && <div>User: {perpetual.profile.name} &nbsp; Account: {perpetual.account.name} &nbsp; Bank: {perpetual.bank.name}</div>}\n      {!token && <div>Public</div>}\n      {flash && <div className=\"flash\">{flash}</div>}\n      <div>\n        <ul className='error'>\n          {errors.map(error => {\n            return (\n              <li key={error}>{error}</li>\n            );\n          })}\n        </ul>\n        {fetching && <span>Fetching...</span>}\n      </div>\n      <div className=\"left\">\n        <nav>\n          <ul>\n            <li><Link to=\"/home\">Home</Link></li>\n            <li>\n              <span>Auth</span>\n              <ul>\n                {!token && <li ><Link to=\"/sign-in\">Sign-in</Link></li>}\n                {!token && <li><Link to=\"/sign-up\">Sign-up</Link></li>}\n                {token && <li><Link to=\"/update-password\">Update password</Link></li>}\n                {token && <li><Link to=\"/reset-password\">Reset password</Link></li>}\n              </ul>\n            </li>\n            {token && <li><Link to=\"/statement\">Statement</Link></li>}\n            <li><Link to=\"/test\">Test</Link></li>\n          </ul>\n        </nav>\n        {token && <SignOutButton onCompleted={signOutCompleted}/>}\n      </div>      \n      <div className=\"right\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Outline","import React from 'react'\nimport Outline from './Outline'\nimport { PageProps } from '..'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../store'\n\n\nconst HomePage: React.FC<PageProps> = props => {\n  const token = useSelector<ApplicationState, string>(state => state.token)\n\treturn (\n\t\t<Outline {...props}>\n\t\t\t{token &&\n\t\t\t<div>\n\t\t\t\t<h1>You are logged in</h1>\n\t\t\t</div>\n\t\t\t}\n\t\t\t{!token &&\n\t\t\t<div>\n\t\t\t\t<h1>Public web site</h1>\n\t\t\t</div>\n\t\t\t}\n\t\t</Outline>\n\t)\n}\n\nexport default HomePage","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getApi } from '../api'\nimport { ApplicationState } from '../store'\nimport { PageProps } from '..'\nimport Outline from './Outline'\n\nconst TestPage: React.FC<PageProps> = props => {\n  const api = getApi(useDispatch())\n\tconst count = useSelector<ApplicationState, number>(state => state.counter)\n\tconst dispatch = useDispatch()\n  return (\n    <Outline {...props}>\n\t\t\t<div>Count: {count}</div>\n\t\t\t<button onClick={() => dispatch({ type: 'increment-counter' })}>Increment</button>\n      <br/>\n      <button onClick={() => api.perpetual()}>Test</button>\n      <br/>\n      <button onClick={() => api.error()}>Error</button>\n    </Outline>\n  )\n}\n\nexport default TestPage","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getApi } from '../api'\nimport { FormProps } from '..'\n\ninterface FormData {\n  email: string,\n  password: string,\n}\n\nconst defaultFormData: FormData = {\n  email: '',\n  password: ''\n}\n\nconst SignInForm: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const [formData, setFormData] = React.useState<FormData>(defaultFormData)\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormData({ ...formData, [e.target.name]: e.target.value })\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n      e.preventDefault()\n      const token = await api.signIn(formData.email, formData.password)\n      console.debug(`Logged in as: ${token}`)\n      props.onCompleted()\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit}>\n        <h1>Sign-in</h1>\n        <p>\n          <label>Username<br/>\n            <input name=\"email\" value={formData.email} onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>Password<br/>\n            <input name=\"password\" value={formData.password} type=\"password\" onChange={handleChange} />\n          </label>\n        </p>\n        <button type=\"submit\">Sign-in</button>\n    </form>\n  )\n}\n\nexport default SignInForm","const defaultLocalTime = '00:00:00'\n\nexport interface Token {\n  token: string,\n}\n\nexport const defaultToken: Token = {\n  token: '',\n}\n\nexport interface Profile {\n  identified: boolean,\n  name: string,\n  roles: string[],\n}\n\nexport const defaultProfile: Profile = {\n  identified: false,\n  name: '<anonymous>',\n  roles: [],\n}\n\nexport interface CurrencyGroup {\n  id: number,\n  name: string,\n  priority: number,\n}\n\nexport const defaultCurrencyGroup: CurrencyGroup = {\n  id: 0,\n  name: 'DEFAULT',\n  priority: 0,\n}\n\nexport interface Position {\n\n}\n\nexport const defaultPosition: Position = {\n\n}\n\nexport interface Bank {\n  id: number,\n  name: string,\n  opening: string,\n  settlementCompletionTarget: string,\n  closing: string,\n  minimumPayIn : Position,\n}\n\nexport const defaultBank: Bank = {\n  id: 0,\n  name: 'DEFAULT_BANK',\n  opening: defaultLocalTime,\n  settlementCompletionTarget: defaultLocalTime,\n  closing: defaultLocalTime,\n  minimumPayIn : defaultPosition,\n}\n\nexport interface Account {\n  id: number,\n  bankId: number,\n  name: string,\n  shortPositionLimit: Position,\n}\n\nexport const defaultAccount: Account = {\n  id: 0,\n  bankId: 0,\n  name: 'DEFAULT_ACCOUNT',\n  shortPositionLimit: defaultPosition,\n}\n\nexport interface Currency {\n  id: number,\n  bankId: number,\n  currencyGroupId: number,\n  coin: string,\n  opening: string,\n  fundingCompletionTarget: string,\n  closing: string,\n  close: string,\n}\n\nexport const defaultCurrency: Currency = {\n  id: 0,\n  bankId: 0,\n  currencyGroupId: 0,\n  coin: 'XXX',\n  opening: defaultLocalTime,\n  fundingCompletionTarget: defaultLocalTime,\n  closing: defaultLocalTime,\n  close: defaultLocalTime,\n}\n\nexport interface Perpetual {\n  profile: Profile,\n  account: Account,\n  bank: Bank,\n  currencyGroups: CurrencyGroup[],\n  currencies: Currency[]\n}\n\nexport const defaultPerpetual: Perpetual = {\n  profile: defaultProfile,\n  account: defaultAccount,\n  bank: defaultBank,\n  currencyGroups: [],\n  currencies: [],\n}\n\nexport interface Instruction {\n  id: number,\n  dbId: number,\n  crId: number,\n  partyIds: number[],\n  bookId: number,\n  booked: string,\n  type: string,\n  reference: string,\n  amount: { [key:string]:number }\n}\n\nexport const defaultInstruction: Instruction = {\n  id: 0,\n  dbId: 0,\n  crId: 0,\n  partyIds: [0, 0],\n  bookId: 0,\n  booked: '00:00:00',\n  type: '',\n  reference: '',\n  amount: {}\n}","import { AnyAction, createStore } from \"redux\"\nimport { Perpetual, defaultPerpetual, Instruction } from \"./domain\"\nimport client from \"./remote\"\n\nexport interface ApplicationState {\n  fetching: boolean,\n  errors: string[],\n  flash: string,\n  token: string,\n  counter: number,\n  perpetual: Perpetual,\n  instructions: Instruction[],\n}\n\nconst defaultApplicationState: ApplicationState = {\n  fetching: false,\n  errors: [],\n  flash: 'Ready',\n  token: '',\n  counter: 0,\n  perpetual: defaultPerpetual,\n  instructions: [],\n}\n\nconst rootReducer = (state: ApplicationState = defaultApplicationState, action: AnyAction) => {\n  console.log(`Reducer is called, state: ${JSON.stringify(state)} action: ${JSON.stringify(action)}`)\n  switch (action.type) {\n    case 'increment-counter':\n      return { ...state, counter: state.counter + 1 }\n    case 'update-token':\n      return { ...state, token: action.token }\n    case 'update-fetching':\n      return { ...state, fetching: action.fetching }\n    case 'update-errors':\n      return { ...state, errors: action.errors }\n    case 'update-flash':\n      return { ...state, flash: action.flash }\n    case 'update-perpetual':\n      return { ...state, perpetual: action.perpetual }\n    case 'update-instructions':\n      return { ...state, instructions: action.instructions }\n  }\n  return state\n}\n\nconst token = localStorage.getItem('TOKEN') || ''\nexport const store = createStore(rootReducer, { ...defaultApplicationState, token })\nif (token){\n  client.get(`/master/perpetual`).then((perpetual: Perpetual) => store.dispatch({type: 'update-perpetual', perpetual}))\n}\nstore.subscribe(() => {\n  localStorage.setItem('TOKEN', store.getState().token)\n})\n\n","import React from 'react'\nimport { getApi } from '../api'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ApplicationState } from '../store'\nimport { FormProps } from '..'\ndeclare const gapi: any\n\nconst SocialSignInPanel: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const token = useSelector<ApplicationState, string>(state => state.token)\n  const onSignIn = async (googleUser: any) => {\n    const profile = googleUser.getBasicProfile()\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    const identity = googleUser.getAuthResponse().id_token\n    console.log(`Google user token: ${identity}`)\n    await api.socialSignIn('google', identity)\n    props.onCompleted()\n  }\n  React.useEffect(() => {\n    if (!token){\n      console.log(`Setting-up google sign-in button`)\n      gapi.signin2.render('google-sign-in', {\n        'scope': 'profile email',\n        'longtitle': true,\n        'theme': 'dark',\n        'onsuccess': onSignIn,\n        // 'onfailure': props.onFailure\n      })\n    }\n  }, [token])\n  return (\n    <div>\n      {!token && <div id=\"google-sign-in\"></div>}\n    </div>\n  )\n}\n\nexport default SocialSignInPanel","import React from 'react'\nimport { PageProps } from '..'\nimport SignInForm from '../component/SignInForm'\nimport Outline from './Outline'\nimport { getApi } from '../api'\nimport { useDispatch } from 'react-redux'\nimport { store } from '../store'\nimport SocialSignInPanel from '../component/SocialSignInPanel'\n\nconst SignInPage: React.FC<PageProps> = props => {\n    const api = getApi(useDispatch())\n    const signInCompleted = async () => {\n      console.log(`Sign in completed, token: ${store.getState().token}`)\n      if (store.getState().token){\n        await api.perpetual()\n        api.flash(\"Sign-in is successful\")\n        props.history.push('/home')\n      }\n    }\n      return (\n        <Outline {...props}>\n          <p>\n            <SignInForm onCompleted={signInCompleted}/>\n          </p>\n          <p>\n            <SocialSignInPanel onCompleted={signInCompleted}/>\n          </p>\n        </Outline>\n    )\n}\n\nexport default SignInPage","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getApi } from '../api'\nimport { FormProps } from '..'\n\ninterface FormData {\n  email: string,\n  password: string,\n  name: string,\n}\n\nconst defaultFormData: FormData = {\n  email: '',\n  password: '',\n  name: '',\n}\n\nconst SignUpForm: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const [formData, setFormData] = React.useState<FormData>(defaultFormData)\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormData({ ...formData, [e.target.name]: e.target.value })\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault()\n    await api.signUp(formData.email, formData.password, formData.name)\n    api.flash(`An email has been sent to ${formData.email}`)\n    props.onCompleted()\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit}>\n      <h1>Sign-up</h1>\n      <p>\n        <label>Username<br/>\n          <input name=\"email\" value={formData.email} onChange={handleChange} />\n        </label>\n      </p>\n      <p>\n        <label>Password<br/>\n          <input name=\"password\" value={formData.password} type=\"password\" onChange={handleChange} />\n        </label>\n      </p>\n      <p>\n        <label>Name<br/>\n          <input name=\"name\" value={formData.name} onChange={handleChange} />\n        </label>\n      </p>\n      <button type=\"submit\">Sign-up</button>\n    </form>\n  )\n}\n\nexport default SignUpForm","import React from 'react'\nimport { PageProps } from '..'\nimport Outline from './Outline'\nimport SignUpForm from '../component/SignUpForm'\n\nconst SignUpPage: React.FC<PageProps> = props => {\n  const signUpCompleted = async () => {\n    props.history.push('/home')\n  }\n  return (\n    <Outline {...props}>\n        <SignUpForm onCompleted={signUpCompleted}/>\n    </Outline>\n  )\n}\n\nexport default SignUpPage","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getApi } from '../api'\nimport { FormProps } from '..'\n\ninterface FormData {\n  newPassword: string,\n  newPasswordConfirmation: string,\n}\n\nconst defaultFormData: FormData = {\n  newPassword: '',\n  newPasswordConfirmation: ''\n}\n\nconst UpdatePasswordForm: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const [formData, setFormData] = React.useState<FormData>(defaultFormData)\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormData({ ...formData, [e.target.name]: e.target.value })\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault()\n    api.updatePassword(formData.newPassword, formData.newPasswordConfirmation)\n    props.onCompleted()\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit}>\n      <h1>Update password</h1>\n      <p>\n        <label>New password<br/>\n          <input name=\"newPassword\" type=\"password\" value={formData.newPassword} onChange={handleChange} />\n        </label>\n      </p>\n      <p>\n        <label>New password confirmation<br/>\n          <input name=\"newPasswordConfirmation\" type=\"password\" value={formData.newPasswordConfirmation} onChange={handleChange} />\n        </label>\n      </p>\n      <button type=\"submit\">Update password</button>\n    </form>\n  )\n}\n\nexport default UpdatePasswordForm","import React from 'react'\nimport { PageProps } from '..'\nimport Outline from './Outline'\nimport UpdatePasswordForm from '../component/UpdatePasswordForm'\n\nconst UpdatePasswordPage: React.FC<PageProps> = props => {\n    return (\n      <Outline {...props}>\n          <UpdatePasswordForm onCompleted={() => undefined}/>\n      </Outline>\n    )\n}\n\nexport default UpdatePasswordPage","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getApi } from '../api'\nimport { FormProps } from '..'\n\ninterface FormData {\n  email: string,\n  password: string,\n}\n\nconst defaultFormData: FormData = {\n  email: '',\n  password: ''\n}\n\nconst ResetPasswordForm: React.FC<FormProps> = props => {\n  const api = getApi(useDispatch())\n  const [formData, setFormData] = React.useState<FormData>(defaultFormData)\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormData({ ...formData, [e.target.name]: e.target.value })\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n      e.preventDefault()\n      api.resetPassword(formData.email)\n      props.onCompleted()\n  }\n\n  return (\n    <form noValidate onSubmit={handleSubmit}>\n          <h1>Reset password</h1>\n          <p>\n            <label>Email<br/>\n              <input name=\"email\" value={formData.email} onChange={handleChange}/>\n            </label> \n          </p>\n          <button type=\"submit\">Reset password</button>\n    </form>\n  )\n}\n\nexport default ResetPasswordForm","import React from 'react'\nimport { PageProps } from '..'\nimport Outline from './Outline'\nimport ResetPasswordForm from '../component/ResetPasswordForm'\n\nconst ResetPasswordPage: React.FC<PageProps> = props => {\n    return (\n      <Outline {...props}>\n          <ResetPasswordForm onCompleted={() => undefined}/>\n      </Outline>\n    )\n}\n\nexport default ResetPasswordPage","import React from 'react'\nimport { Instruction, Perpetual } from '../domain'\n\ninterface Props {\n  instructions: Instruction[],\n  perpetual: Perpetual,\n}\n\nconst StatementTable: React.FC<Props> = props => {\n  const {perpetual: {currencies, account}, instructions} = props\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Book #</th>\n          <th>Moment</th>\n          <th>Type</th>\n          <th>Counterparty</th>\n          {currencies.map(currency => {\n            return (\n              <th colSpan={2}>{currency.coin}</th>\n            )\n          })}\n          <th>Reference</th>\n        </tr>\n        <tr>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          {currencies.map(currency => {\n            return (\n              <>\n                <th>DB</th>\n                <th>CR</th>\n              </>\n            )\n          })}\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n      {instructions.map(instruction => {\n        return (\n          <tr>\n            <td>{instruction.bookId}</td>\n            <td>{instruction.booked}</td>\n            <td>{instruction.type}</td>\n            <td>{JSON.stringify(instruction.partyIds)}</td>\n            {currencies.map(currency => {\n              const rawAmount = instruction.amount[currency.coin] || 0\n              var dbAmount = rawAmount\n              var crAmount = 0\n              if (instruction.crId === account.id){\n                dbAmount = 0\n                crAmount = rawAmount\n              }\n              return (\n                <>\n                  <td className=\"amount\">{dbAmount !== 0 ? dbAmount.toFixed(2) : ''}</td>\n                  <td className=\"amount\">{crAmount !== 0 ? crAmount.toFixed(2) : ''}</td>\n                </>\n              )\n            })}\n            <td>{instruction.reference}</td>\n          </tr>\n        )\n      })}\n      </tbody>\n    </table>\n  )\n\n}\n\nexport default StatementTable","import React from 'react'\nimport Outline from './Outline'\nimport { PageProps } from '..'\nimport { getApi } from '../api'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ApplicationState } from '../store'\nimport { Perpetual, Instruction } from '../domain'\nimport StatementTable from '../component/StatementTable'\n\nconst StatementPage: React.FC<PageProps> = props => {\n\tconst api = getApi(useDispatch())\n  const perpetual = useSelector<ApplicationState, Perpetual>(state => state.perpetual)\n\tconst instructions = useSelector<ApplicationState, Instruction[]>(state => state.instructions)\n\t// eslint-disable-next-line\n\tReact.useEffect(() => { api.statement() }, [])\n\treturn (\n\t\t<Outline {...props}>\n\t\t\t<h1>Account statement</h1>\n\t\t\t<p>\n\t\t\t\t<StatementTable perpetual={perpetual} instructions={instructions}/>\n\t\t\t</p>\n\t\t</Outline>\n\t);\n}\n\nexport default StatementPage","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport HomePage from './page/HomePage';\nimport TestPage from './page/TestPage';\nimport SignInPage from './page/SignInPage';\nimport SignUpPage from './page/SignUpPage';\nimport UpdatePasswordPage from './page/UpdatePasswordPage';\nimport ResetPasswordPage from './page/ResetPasswordPage';\nimport StatementPage from './page/StatementPage';\n\nfunction App() {\n  return (\n    <BrowserRouter basename='/dummy'>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/sign-in\" component={SignInPage} />\n        <Route path=\"/sign-up\" component={SignUpPage} />\n        <Route path=\"/update-password\" component={UpdatePasswordPage}/>\n        <Route path=\"/reset-password\" component={ResetPasswordPage}/>\n        <Route path=\"/statement\" component={StatementPage}/>\n        <Route path=\"/test\" component={TestPage} />\n        <Route render={() => (<div>No match</div>)} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { RouteComponentProps } from 'react-router'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nexport interface PageProps extends RouteComponentProps {}\nexport interface FormProps {\n  onCompleted: () => void\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}